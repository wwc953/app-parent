server.port=9999
spring.application.name=app-redis-cluster

#redisCluter
#spring.redis.password=
#spring.redis.cluster.nodes=127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005
#spring.redis.cluster.testOnReturn=true
#spring.redis.cluster.maxIdle=10
#spring.redis.cluster.minIdle=2
#spring.redis.cluster.maxWaitMills=3000
#spring.redis.cluster.testOnBorrow=true
#spring.redis.cluster.maxTotal=4
#spring.redis.cluster.connectionTimeOut=30000
#spring.redis.jedis.pool.max-active=1000
#spring.redis.jedis.pool.max-idle=8
#spring.redis.jedis.pool.max-wait=1000

##redis cluster config
##RedisCluster集群节点及端口信息
#share.redis.cluster.nodes=127.0.0.1:6379,127.0.0.1:6380,127.0.0.1:6381,127.0.0.1:6382,127.0.0.1:6383,127.0.0.1:6384
##Redis密码
#share.redis.password=
##在群集中执行命令时要遵循的最大重定向数目
#share.redis.cluster.max-redirects=5
##Redis连接池在给定时间可以分配的最大连接数。使用负值无限制
#share.redis.jedis.pool.max-active=1000
##以毫秒为单位的连接超时时间
#share.redis.timeout=2000
##池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接
#share.redis.jedis.pool.max-idle=8
##目标为保持在池中的最小空闲连接数。这个设置只有在设置max-idle的情况下才有效果
#share.redis.jedis.pool.min-idle=5
##连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止
#share.redis.jedis.pool.max-wait=1000
##redis cluster只使用db0
#share.redis.index=0

#spring.redis.cluster.nodes=127.0.0.1:7000,127.0.0.1:7001
#spring.redis.cluster.timeout=2000
#spring.redis.cluster.max-redirects=8

spring.redis.jedis.pool.max-active=250
spring.redis.jedis.pool.max-wait=1000
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-idle=8
spring.redis.commandTimeout=5000
spring.redis.timeout=2000
spring.redis.cluster.nodes=127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003,127.0.0.1:7004,127.0.0.1:7005
